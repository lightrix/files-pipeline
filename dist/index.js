import{deepmerge as r}from"deepmerge-ts";import{fileURLToPath as p}from"url";import f from"./options/index.js";import e from"./lib/files.js";import c from"./lib/apply-to.js";import{minify as h}from"csso";import{minify as l}from"html-minifier-terser";import m from"sharp";import{optimize as w}from"svgo";import{minify as g}from"terser";import y,{callbacks as a}from"./options/lib/compress/index.js";import u from"./lib/vendor/sharp-read.js";import d from"critters";import b,{callbacks as O}from"./options/lib/critters/index.js";class j{options;paths=new Set;constructor(s={}){return this.options=s,this.mergeDefaultOptions(f),this}mergeDefaultOptions(s){for(const t in this.options)Object.prototype.hasOwnProperty.call(s,t)&&this.options[t]===!0&&(this.options[t]=s[t]);if(this.options=r(s,this.options),typeof this.options.path<"u")if(this.options.path instanceof Array||this.options.path instanceof Set)for(const t of this.options.path)this.paths.add(t);else this.paths.add(this.options.path)}async compress(){this.mergeDefaultOptions(y);for(const[s,t]of Object.entries(this.options))if(!!t)for(const o of this.paths)switch(s){case"css":{await(await(await new e(this.options.logger,"css").in(o)).by("**/*.css")).not(this.options.exclude).apply({...a,wrote:async i=>h(i,t).css});break}case"html":{await(await(await new e(this.options.logger,"html").in(o)).by("**/*.html")).not(this.options.exclude).apply({...a,wrote:async i=>await l(i,t)});break}case"js":{await(await(await new e(this.options.logger,"js").in(o)).by("**/*.{js,mjs,cjs}")).not(this.options.exclude).apply({...a,wrote:async i=>(await g(i,t)).code});break}case"img":{await(await(await new e(this.options.logger,"img").in(o)).by("**/*.{avci,avcs,avif,avifs,gif,heic,heics,heif,heifs,jfif,jif,jpe,jpeg,jpg,png,raw,tiff,webp}")).not(this.options.exclude).apply({...a,wrote:async i=>await u(i,t),read:async i=>m(i,{failOn:"none",sequentialRead:!0,unlimited:!0})});break}case"svg":{await(await(await new e(this.options.logger,"svg").in(o)).by("**/*.svg")).not(this.options.exclude).apply({...a,wrote:async i=>{const n=w(i,t);if(typeof n.error<"u"&&log.error("",n.error),typeof n.data<"u")return n.data}});break}default:break}return this}async critters(){this.mergeDefaultOptions(b);for(const s of this.paths){const t=c(s,i=>i instanceof URL?p(i):i),o=new d(r(this.options.critters,{path:t instanceof Map?t.keys().next().value:t,logLevel:(()=>{switch(this.options.logger){case 0:return"silent";case 1:return"silent";case 2:return"info";default:return"info"}})()}));await(await(await new e(this.options.logger,"html").in(s)).by("**/*.html")).not(this.options.exclude).apply({...O,wrote:i=>o.process(i)})}return this}}export{j as default};
