import*as s from"fs";import{fileURLToPath as u}from"url";import{dirname as p}from"path";import h from"fast-glob";import l from"../options/index.js";import a from"./apply-to.js";class y{paths=new Map;results=new Map;pipe;constructor(t=2){return this.pipe={files:0,debug:t,info:{},current:{inputPath:"",outputPath:"",fileSizeAfter:0,fileSizeBefore:0}},this}async in(t=!1){if(!t)return this;const e=a(a(t,i=>i instanceof URL?u(i):i),i=>i.endsWith("/")?i:`${i}/`);if(e instanceof Map)for(const[i,o]of e)this.paths.set(i,o);else this.paths.set(e,e);return this}async by(t=!1){if(!t)return this;for(const[e,i]of this.paths)for(const o of await h(t,{cwd:e,onlyFiles:!0}))this.results.set(`${i}${o}`,`${e}${o}`);return this}not(t){let e=new Set;if(typeof t<"u")if(t instanceof Array||t instanceof Set)for(const i of t)e.add(i);else e.add(t);for(const i of e){if(typeof i=="string")for(const o of this.results)(o[0].match(i)||o[1].match(i))&&this.results.delete(o[0]);if(typeof i=="function")for(const o of this.results)(i(o[0])||i(o[1]))&&this.results.delete(o[0])}return this}async apply(t=l.pipeline){for(const[e,i]of this.results)try{const o=(await s.promises.stat(i)).size;if(t.read&&t.wrote){const r=await t.wrote(i,await t.read(i));if(!r)return;if(t.passed&&await t.passed(o,r)){try{await s.promises.access(p(e),s.constants.W_OK)}catch{await s.promises.mkdir(p(e),{recursive:!0})}console.log(`output path: ${e}`);try{await s.promises.writeFile(e,r,"utf-8")}catch(n){console.log(`error: ${n}`)}console.log(`wrote: ${e}`);const f=(await s.promises.stat(e)).size;this.pipe.debug>0&&(this.pipe.current={inputPath:i,outputPath:e,fileSizeBefore:o,fileSizeAfter:f},this.pipe.files++,t.changed&&(this.pipe=await t.changed(this.pipe))),this.pipe.debug>1&&typeof t.accomplished=="function"&&console.log(await t.accomplished(i,e,o,f))}}}catch(o){console.log(o),this.results.delete(e),typeof t.failed=="function"&&console.log(await t.failed(i))}return this.pipe.debug>0&&this.results.size>0&&typeof t.fulfilled=="function"&&console.log(await t.fulfilled(this.pipe)),this}}export{y as default};
