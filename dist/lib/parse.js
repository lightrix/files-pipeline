import*as e from"fs";import{dirname as l}from"path";import d from"../options/lib/callbacks.js";import h from"./files.js";var S=async(u,m,n=2,c="",w,i=()=>d)=>{let o={files:0,type:c,info:{},current:{inputPath:"",outputPath:"",fileSizeAfter:0,fileSizeBefore:0}};for(const a of(await new h().in(u).by(m)).not(w).results){const f=a[1],t=a[0];try{const s=(await e.promises.stat(f)).size,r=await i().wrote(await i().read(f));if(!r)continue;if((typeof i().passed=="function"||!i().passed)&&await i().passed(s,r)){try{await e.promises.access(l(t),e.constants.W_OK)}catch{await e.promises.mkdir(l(t),{recursive:!0})}await e.promises.writeFile(t,r,"utf-8");const p=(await e.promises.stat(t)).size;n>0&&(o.current={inputPath:f,outputPath:t,fileSizeBefore:s,fileSizeAfter:p},o.files++,o=await i().changed(o)),n>1&&typeof i().accomplished=="function"&&console.info(await i().accomplished(f,t,s,p))}}catch{typeof i().failed=="function"&&console.log(await i().failed(f))}}n>0&&typeof i().fulfilled=="function"&&console.info(await i().fulfilled(o))};export{S as default};
