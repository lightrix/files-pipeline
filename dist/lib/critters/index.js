import n from"critters";import l from"./../../options/lib/callbacks.js";import c from"./../parse.js";import{fileURLToPath as p}from"url";import f from"./../apply-to.js";import{deepmerge as m}from"deepmerge-ts";const b=m(l,{error:async t=>`Error: Cannot inline file ${t} !`,end:async t=>`\x1B[32mSuccessfully inlined a total of ${t.files} ${t.type.toUpperCase()} ${t.files===1?"file":"files"}.\x1B[39m`});var x=async(t,e,a=2)=>{const r=f(t,o=>o instanceof URL?p(o):o),i=await new n({...e.critters,path:r instanceof Map?r.keys().next().value:r});for(const o in e)if(Object.prototype.hasOwnProperty.call(e,o)){if(!e[o])continue;switch(o){case"critters":{await c(t,"**/*.html",a,"html",e?.exclude,()=>({...b,write:s=>i.process(s)}));break}default:break}}};export{x as default};
